# This is a basic workflow to run tests, build Android app and supply it to Play Store. Version 1.

name: CI / CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # Run React Native Eslint and Jest tests
  test:
    name: Test
    # Setup Ubuntu version
    runs-on: ubuntu-latest
    strategy:
      # Node version matrix
      matrix:
        node-version: [16.13.0]
    steps:
     - uses: actions/checkout@v3
     - name: Use Node.js ${{ matrix.node-version }}
       # Setup node
       uses: actions/setup-node@v3
       with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
     # Install dependencies
     - name: Install dependencies
       run: yarn install
     - name: Run Eslint tests
       run: yarn lint
     - name: Run Jest tests  
       run: yarn test

# Decode, Build and sign application
  build:
    needs: test
    name: Android-build
    # Set Ubuntu version
    runs-on: ubuntu-latest
    # Node version matrix
    strategy:
        matrix:
          node-version: [16.13.0]
    # Steps
    steps:
      - name: Checkout to git repository
        uses: actions/checkout@v3
      # Setup Node
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Install dependencies
        run: |
          yarn install
      # Install Ruby
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.2'
          bundler-cache: true
      # -----------------------------------------------
      # Decode upload keystore and Play Store json -key
      # -----------------------------------------------
      - name: Decode Service Account Key JSON File
        uses: timheuer/base64-to-file@v1
        id: service_account_json_file
        with:
          fileName: "serviceAccount.json"
          encodedString: ${{ secrets.GPLAY_SERVICE_ACCOUNT_KEY_JSON }}
      - name: Decode Keystore File
        uses: timheuer/base64-to-file@v1
        id: android_keystore
        with:
          fileName: "android_keystore.keystore"
          encodedString: ${{ secrets.KEYSTORE }}
      # -----------------------------------------------
      # Build and sign
      - name: Build
        run: |
          chmod +x ./android/gradlew
          bundle exec fastlane android build_sign_and_deploy
        env:
             ANDROID_KEYSTORE_FILE: ${{ steps.android_keystore.outputs.filePath }}
             ANDROID_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
             ANDROID_KEYSTORE_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
             ANDROID_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
             GPLAY_JSON_KEY_FILE: ${{ steps.service_account_json_file.outputs.filePath }}
             SLACK_WEB_HOOK_URL: ${{secrets.SLACK_INCOMING_WEBHOOK_URL}}
      # Upload artifact
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifact.aab
          path: |
            ./android/app/build/outputs/bundle/release/
